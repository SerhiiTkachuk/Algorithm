"""
1. Выбрать станцию, покрывающую наибольшее количество штатов, еще
не входящих в покрытие. Если станция будет покрывать некоторые
штаты , уже входящие в покрытие, это нормально.
2. Повторять, пока остаются штаты, не входящие в покрытие.

Этот алгоритм является приближеняым. Когда вычисление точного решения
занимает слишком много времени, применяется приближенный алгоритм.
Эффективность приближенного алгоритма оценивается по:
- быстроте;
- близости полученного решения к оптимальному.
Жадные алгоритмы хороши не только тем, что они обычно легко формулируются,
но и тем, что простота обычно оборачивается быстротой выполнения.
В данном случае жадный алгоритм выполняется за время О(n2) , где
n - количество радиостанций.

Ключи - названия станций, а значения - сокращенные обозначения штатов
, входящих в зону охвата. Таким образом, в данном примере станция kone
вещает в штатах Айдахо (id), Невада (nv) и Юта (ut). Все значения являются
множествами.
"""


states_needed = {"mt", "wa", "or", "id", "nv", "ut", "са", "az"}

stations = {}
stations["kone"] = {"id", "nv", "ut"}
stations["ktwo"] = {"wa", "id", "mt"}
stations["kthree"] = {"or", "nv", "са"}
stations["kfour"] = {"nv", "ut"}
stations["kfive"] = {"ca", "az"}

final_stations = set()

while states_needed:
    best_station = None
    states_covered = set()
    for station, states in stations.items():
        covered = states_needed & states
        if len(covered) > len(states_covered):
            best_station = station
            states_covered = covered
    states_needed -= states_covered
    final_stations.add(best_station)

print(final_stations)
